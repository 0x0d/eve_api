<?php

/**
 * Implementation of hook_schema.
 */
function omni_eve_api_schema()
{
  $schema['oea_api_keys'] = array(
    'description' => t('This table holds all the api\'s associated with all the accounts.'),
    'fields' => array(
      'accountid' => array(
        'description' => t('The link between api and the character.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'drupalid' => array(
        'description' => t('The link between api and drupal account.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'keyid' => array(
        'description' => t('The Key ID of the EVE API.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'vcode' => array(
        'description' => t('The Verification Code of the EVE API.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'errorid' => array(
        'description' => t('Error code to identify any problems with a registered api key.'),
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => t('When the API was last updated.'),
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'VARCHAR',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => TRUE,
      ),
      'created' => array(
        'description' => t('When the API was initially created.'),
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'VARCHAR',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => TRUE,
      ),
    ),
    'unique keys' => array('accountid' => array('accountid')),
    'primary key' => array('accountid'),
  );

  $schema['oea_characters'] = array(
    'description' => t('This table holds all the characters retrieved from the API\'s.'),
    'fields' => array(
      'characterid' => array(
        'description' => t('The unique Character ID associated with the EVE Character.'),
        'type' => 'int',
        'not null' => TRUE
      ),
      'drupalid' => array(
        'description' => t('The link between api and drupal account.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'accountid' => array(
        'description' => t('The link between api and the character.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'charactername' => array(
        'description' => t('The EVE Character Name'),
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'corporationid' => array(
        'description' => t('The Corporation ID the Character is currently associated with in EVE.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'corporationname' => array(
        'description' => t('The Corporation Name the Character is currently associated with in EVE.'),
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'corporationticker' => array(
        'description' => t('The Corporation Ticker the Character is currently associated with in EVE.'),
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
      ),
      'allianceid' => array(
        'description' => t('The Alliance ID the Character is currently associated with in EVE.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'alliancename' => array(
        'description' => t('The Alliance Name the Character is currently associated with in EVE.'),
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'allianceticker' => array(
        'description' => t('The Alliance Ticker the Character is currently associated with in EVE.'),
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
      ),
    ),
    'unique keys' => array('characterid' => array('characterid')),
    'primary key' => array('characterid'),
  );

  $schema['oea_blue_standings'] = array(
    'description' => t('This table holds all the standings of the current alliance or corporation.'),
    'fields' => array(
      'contactID' => array(
        'description' => t('The unique ID for a corporation, alliance, or character.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'contactName' => array(
        'description' => t('The name of the corporation, alliance, or character.'),
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'standing' => array(
        'description' => t('The current standing of the corporation, alliance, or character.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'deleted' => array(
        'description' => t('Identifies if the corporation was removed from the alliance at some point..'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'manual' => array(
        'description' => t('Identifies if the standing was manually added.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array('contactID' => array('contactID')),
    'primary key' => array('contactID'),
  );

  $schema['oea_alliance_corporations'] = array(
    'description' => t('This table holds all the corporations in the alliance.'),
    'fields' => array(
      'corporationid' => array(
        'description' => t('The Corporation ID the Character is currently associated with in EVE.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'corporationname' => array(
        'description' => t('The Corporation Name the Character is currently associated with in EVE.'),
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'deleted' => array(
        'description' => t('Identifies if the corporation was removed from the alliance at some point..'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'manual' => array(
        'description' => t('Identifies if the corporation was manually added.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array('corporationid' => array('corporationid')),
    'primary key' => array('corporationid'),
  );

  $schema['oea_alliance_tags'] = array(
    'description' => t('This table holds all the alliance tickers.'),
    'fields' => array(
      'allianceid' => array(
        'description' => t('The Alliance ID.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'allianceticker' => array(
        'description' => t('The Alliance Ticker.'),
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
      ),
    ),
    'unique keys' => array('allianceid' => array('allianceid')),
    'primary key' => array('allianceid'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function omni_eve_api_install()
{
  db_add_field('users', 'charactername', array(
    'type' => 'varchar',
    'not null' => TRUE,
    'default' => '',
    'length' => 50,
    'description' => 'Main EVE Character Name',
  ));

  db_add_field('users', 'characterid', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Main EVE Character ID',
  ));

  variable_set('omni_eve_api_enable_cron', FALSE);
  variable_set('omni_eve_api_blue_role', '2');
  variable_set('user_picture_dimensions', '128x128');
  variable_set('eve_user_picture_dimensions', '128');
  variable_set('eve_avatar_https', 'https://image.eveonline.com/Character/');
  variable_set('eve_avatar_http', 'http://image.eveonline.com/Character/');
}

/**
 * Implementation of hook_uninstall().
 */
function omni_eve_api_uninstall()
{
  db_drop_field('users', 'charactername');
  db_drop_field('users', 'characterid');
}
