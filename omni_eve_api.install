<?php
/**
 * @file
 * Install, update, and uninstall functions for the Omni EVE API module.
 */

/**
 * Implements hook_schema().
 */
function omni_eve_api_schema() {
  $schema['oea_api_keys'] = array(
    'description' => 'This table holds all the api\'s associated with all the accounts.',
    'fields' => array(
      'apiid' => array(
        'description' => 'The link between api and the character.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'drupalid' => array(
        'description' => 'The link between api and drupal account.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'keyid' => array(
        'description' => 'The Key ID of the EVE API.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'vcode' => array(
        'description' => 'The Verification Code of the EVE API.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'errorid' => array(
        'description' => 'Error code to identify any problems with a registered api key.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'When the API was last updated.',
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'VARCHAR',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => TRUE,
      ),
      'created' => array(
        'description' => 'When the API was initially created.',
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'VARCHAR',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => TRUE,
      ),
    ),
    'unique keys' => array('apiid' => array('apiid')),
    'primary key' => array('apiid'),
  );

  $schema['oea_characters'] = array(
    'description' => 'This table holds all the characters retrieved from the API\'s.',
    'fields' => array(
      'characterid' => array(
        'description' => 'The unique Character ID associated with the EVE Character.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'drupalid' => array(
        'description' => 'The link between api and drupal account.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'apiid' => array(
        'description' => 'The link between api and the character.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'charactername' => array(
        'description' => 'The EVE Character Name',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'corporationid' => array(
        'description' => 'The Corporation ID the Character is currently associated with in EVE.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'corporationname' => array(
        'description' => 'The Corporation Name the Character is currently associated with in EVE.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'corporationticker' => array(
        'description' => 'The Corporation Ticker the Character is currently associated with in EVE.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
      ),
      'allianceid' => array(
        'description' => 'The Alliance ID the Character is currently associated with in EVE.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'alliancename' => array(
        'description' => 'The Alliance Name the Character is currently associated with in EVE.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => FALSE,
      ),
      'allianceticker' => array(
        'description' => 'The Alliance Ticker the Character is currently associated with in EVE.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => FALSE,
      ),
      'errorid' => array(
        'description' => 'Error code to identify any problems with a registered characters.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'deleted' => array(
        'description' => 'Identifies if the character was removed from the key at some point.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array('characterid' => array('characterid')),
    'primary key' => array('characterid'),
  );

  $schema['oea_whitelist'] = array(
    'description' => 'This table holds all the whitelisted character ID\'s and name.',
    'fields' => array(
      'characterid' => array(
        'description' => 'The unique Character ID associated with the EVE Character.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'charactername' => array(
        'description' => 'The EVE Character Name',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'deleted' => array(
        'description' => 'Identifies if the character was removed from the whitelist at some point.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array('characterid' => array('characterid')),
    'primary key' => array('characterid'),
  );

  $schema['oea_access_mask'] = array(
    'description' => 'This table holds all the access mask retrieved from the API.',
    'fields' => array(
      'accessmask' => array(
        'description' => 'The unique Access Mask ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The Type of Access Mask.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The Name of the Access Mask.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The description of the Access Mask.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'unique keys' => array('accessmask' => array('accessmask')),
    'primary key' => array('accessmask'),
  );

  $schema['oea_blue_standings'] = array(
    'description' => 'This table holds all the standings of the current alliance or corporation.',
    'fields' => array(
      'contactID' => array(
        'description' => 'The unique ID for a corporation, alliance, or character.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'contactName' => array(
        'description' => 'The name of the corporation, alliance, or character.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'standing' => array(
        'description' => 'The current standing of the corporation, alliance, or character.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'deleted' => array(
        'description' => 'Identifies if the corporation, alliance, or character was removed from the alliance at some point.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'manual' => array(
        'description' => 'Identifies if the standing was manually added.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'checked' => array(
        'description' => 'Used to check for updates.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array('contactID' => array('contactID')),
    'primary key' => array('contactID'),
  );

  $schema['oea_alliance_corporations'] = array(
    'description' => 'This table holds all the corporations in the alliance.',
    'fields' => array(
      'corporationid' => array(
        'description' => 'The Corporation ID the Character is currently associated with in EVE.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'corporationname' => array(
        'description' => 'The Corporation Name the Character is currently associated with in EVE.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'deleted' => array(
        'description' => 'Identifies if the corporation was removed from the alliance at some point..',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'manual' => array(
        'description' => 'Identifies if the corporation was manually added.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array('corporationid' => array('corporationid')),
    'primary key' => array('corporationid'),
  );

  $schema['oea_alliance_info'] = array(
    'description' => 'This table holds all the alliance tickers.',
    'fields' => array(
      'allianceid' => array(
        'description' => 'The Alliance ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'allianceticker' => array(
        'description' => 'The Alliance Ticker.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
      ),
      'alliancename' => array(
        'description' => 'The Alliance Name.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
    ),
    'unique keys' => array('allianceid' => array('allianceid')),
    'primary key' => array('allianceid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function omni_eve_api_install() {
  db_add_field('users', 'charactername', array(
    'type' => 'varchar',
    'not null' => TRUE,
    'default' => '',
    'length' => 50,
    'description' => 'Main EVE Character Name',
  ));

  db_add_field('users', 'characterid', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Main EVE Character ID',
  ));

  variable_set('omni_eve_api_first_install', TRUE);
  variable_set('omni_eve_api_enable_cron', TRUE);
  variable_set('omni_eve_api_blue_role', '2');
  variable_set('omni_eve_api_alliance_role', '2');
  variable_set('omni_eve_api_access_mask', '268435455');
  variable_set('user_picture_dimensions', '128x128');
  variable_set('eve_user_picture_dimensions', '128');
  variable_set('eve_avatar_https', 'https://image.eveonline.com/Character/');
  variable_set('eve_avatar_http', 'http://image.eveonline.com/Character/');
}

/**
 * Implements hook_uninstall().
 */
function omni_eve_api_uninstall() {
  db_drop_field('users', 'charactername');
  db_drop_field('users', 'characterid');
}
